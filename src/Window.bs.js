// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cn from "re-classnames/src/Cn.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactFeather from "react-feather";
import * as Utils$Coronate from "./Utils.bs.js";
import * as Router$Coronate from "./Router.bs.js";
import * as Externals$Coronate from "./Externals/Externals.bs.js";
import * as HtmlEntities$Coronate from "./HtmlEntities.bs.js";
import * as Webapi__Dom__Document from "rescript-webapi/src/Webapi/Dom/Webapi__Dom__Document.bs.js";
import VisuallyHidden from "@reach/visually-hidden";

var global_title = "Coronate";

function formatTitle(x) {
  if (x === "") {
    return global_title;
  } else {
    return x + " - " + global_title;
  }
}

function windowReducer(state, action) {
  switch (action.TAG | 0) {
    case /* SetDialog */0 :
        return {
                isDialogOpen: action._0,
                isMobileSidebarOpen: state.isMobileSidebarOpen,
                title: state.title
              };
    case /* SetSidebar */1 :
        return {
                isDialogOpen: state.isDialogOpen,
                isMobileSidebarOpen: action._0,
                title: state.title
              };
    case /* SetTitle */2 :
        var title = action._0;
        Belt_Option.forEach(Webapi__Dom__Document.asHtmlDocument(document), (function (__x) {
                __x.title = formatTitle(title);
              }));
        return {
                isDialogOpen: state.isDialogOpen,
                isMobileSidebarOpen: state.isMobileSidebarOpen,
                title: title
              };
    
  }
}

function Window$About(Props) {
  return React.createElement("article", {
              className: "win__about"
            }, React.createElement("div", {
                  style: {
                    textAlign: "center",
                    flex: "0 0 48%"
                  }
                }, React.createElement("img", {
                      alt: "",
                      height: "196",
                      src: Utils$Coronate.WebpackAssets.logo,
                      width: "196"
                    })), React.createElement("div", {
                  style: {
                    flex: "0 0 48%"
                  }
                }, React.createElement("h1", {
                      className: "title",
                      style: {
                        textAlign: "left"
                      }
                    }, "Coronate"), React.createElement("p", undefined, "Last updated on " + process.env.GIT_MODIFIED + "."), React.createElement("p", undefined, React.createElement("a", {
                          href: Utils$Coronate.faq_url
                        }, "Read the FAQ.")), React.createElement("p", undefined, React.createElement("a", {
                          href: Utils$Coronate.changelog_url
                        }, "View the changelog for new features. ", React.createElement(ReactFeather.ExternalLink, {}))), React.createElement("p", undefined, "Copyright " + HtmlEntities$Coronate.copy + " John" + HtmlEntities$Coronate.nbsp + "Jackson"), React.createElement("p", undefined, "Coronate is free software."), React.createElement("p", undefined, React.createElement("a", {
                          href: Utils$Coronate.github_url
                        }, "Source code is available ", React.createElement(ReactFeather.ExternalLink, {})), " under the ", React.createElement("a", {
                          href: Utils$Coronate.license_url
                        }, "Mozilla Public License 2.0 ", React.createElement(ReactFeather.ExternalLink, {})), ".")));
}

var toolbarClasses = "win__titlebar-button button-ghost button-ghost-large";

function Window$TitleBar(Props) {
  var isMobileSidebarOpen = Props.isMobileSidebarOpen;
  var title = Props.title;
  var dispatch = Props.dispatch;
  return React.createElement("header", {
              className: "app__header"
            }, React.createElement("button", {
                  className: "mobile-only " + toolbarClasses + "",
                  onClick: (function (param) {
                      Curry._1(dispatch, {
                            TAG: /* SetSidebar */1,
                            _0: !isMobileSidebarOpen
                          });
                    })
                }, React.createElement(ReactFeather.Menu, {}), React.createElement(VisuallyHidden, {
                      children: "Toggle sidebar"
                    })), React.createElement("div", {
                  className: "body-20",
                  style: {
                    left: "0",
                    marginRight: "auto",
                    marginLeft: "auto",
                    overflow: "hidden",
                    position: "absolute",
                    right: "0",
                    textAlign: "center",
                    whiteSpace: "nowrap",
                    width: "50%"
                  }
                }, formatTitle(title)), React.createElement("button", {
                  className: toolbarClasses,
                  onClick: (function (param) {
                      Curry._1(dispatch, {
                            TAG: /* SetDialog */0,
                            _0: true
                          });
                    })
                }, React.createElement(ReactFeather.HelpCircle, {}), React.createElement(VisuallyHidden, {
                      children: "About Coronate"
                    })));
}

function $$Window(Props) {
  var children = Props.children;
  var className = Props.className;
  var match = React.useReducer(windowReducer, {
        isDialogOpen: false,
        isMobileSidebarOpen: false,
        title: ""
      });
  var state = match[0];
  var isMobileSidebarOpen = state.isMobileSidebarOpen;
  var dispatch = match[1];
  return React.createElement("div", {
              className: Cn.append(className, isMobileSidebarOpen ? "mobile-sidebar-open" : "mobile-sidebar-closed")
            }, React.createElement(Window$TitleBar, {
                  isMobileSidebarOpen: isMobileSidebarOpen,
                  title: state.title,
                  dispatch: dispatch
                }), Curry._1(children, dispatch), React.createElement(Externals$Coronate.Dialog.make, {
                  isOpen: state.isDialogOpen,
                  onDismiss: (function (param) {
                      Curry._1(dispatch, {
                            TAG: /* SetDialog */0,
                            _0: false
                          });
                    }),
                  ariaLabel: "About Coronate",
                  children: null,
                  className: "win__about-dialog"
                }, React.createElement("button", {
                      className: "button-micro",
                      onClick: (function (param) {
                          Curry._1(dispatch, {
                                TAG: /* SetDialog */0,
                                _0: false
                              });
                        })
                    }, "Close"), React.createElement(Window$About, {})));
}

function noDraggy(e) {
  e.preventDefault();
}

function Window$DefaultSidebar(Props) {
  var dispatch = Props.dispatch;
  return React.createElement("nav", undefined, React.createElement("ul", {
                  style: {
                    margin: "0"
                  }
                }, React.createElement("li", undefined, React.createElement(Router$Coronate.Link.make, {
                          children: null,
                          to_: /* Index */0,
                          onDragStart: noDraggy,
                          onClick: (function (param) {
                              Curry._1(dispatch, {
                                    TAG: /* SetSidebar */1,
                                    _0: false
                                  });
                            })
                        }, React.createElement(ReactFeather.Home, {}), React.createElement("span", {
                              className: "sidebar__hide-on-close"
                            }, HtmlEntities$Coronate.nbsp + "Home"))), React.createElement("li", undefined, React.createElement(Router$Coronate.Link.make, {
                          children: null,
                          to_: /* TournamentList */1,
                          onDragStart: noDraggy,
                          onClick: (function (param) {
                              Curry._1(dispatch, {
                                    TAG: /* SetSidebar */1,
                                    _0: false
                                  });
                            })
                        }, React.createElement(ReactFeather.Award, {}), React.createElement("span", {
                              className: "sidebar__hide-on-close"
                            }, HtmlEntities$Coronate.nbsp + "Tournaments"))), React.createElement("li", undefined, React.createElement(Router$Coronate.Link.make, {
                          children: null,
                          to_: /* PlayerList */2,
                          onDragStart: noDraggy,
                          onClick: (function (param) {
                              Curry._1(dispatch, {
                                    TAG: /* SetSidebar */1,
                                    _0: false
                                  });
                            })
                        }, React.createElement(ReactFeather.Users, {}), React.createElement("span", {
                              className: "sidebar__hide-on-close"
                            }, HtmlEntities$Coronate.nbsp + "Players"))), React.createElement("li", undefined, React.createElement(Router$Coronate.Link.make, {
                          children: null,
                          to_: /* Options */4,
                          onDragStart: noDraggy,
                          onClick: (function (param) {
                              Curry._1(dispatch, {
                                    TAG: /* SetSidebar */1,
                                    _0: false
                                  });
                            })
                        }, React.createElement(ReactFeather.Settings, {}), React.createElement("span", {
                              className: "sidebar__hide-on-close"
                            }, HtmlEntities$Coronate.nbsp + "Options"))), React.createElement("li", undefined, React.createElement(Router$Coronate.Link.make, {
                          children: null,
                          to_: /* TimeCalculator */3,
                          onDragStart: noDraggy,
                          onClick: (function (param) {
                              Curry._1(dispatch, {
                                    TAG: /* SetSidebar */1,
                                    _0: false
                                  });
                            })
                        }, React.createElement(ReactFeather.Clock, {}), React.createElement("span", {
                              className: "sidebar__hide-on-close"
                            }, HtmlEntities$Coronate.nbsp + "Time calculator")))));
}

function sidebarCallback(dispatch) {
  return React.createElement(Window$DefaultSidebar, {
              dispatch: dispatch
            });
}

function Window$Body(Props) {
  var children = Props.children;
  var windowDispatch = Props.windowDispatch;
  var footerFunc = Props.footerFunc;
  var sidebarFuncOpt = Props.sidebarFunc;
  var sidebarFunc = sidebarFuncOpt !== undefined ? sidebarFuncOpt : sidebarCallback;
  return React.createElement("div", {
              className: Cn.append("winBody", Cn.onSome("winBody-hasFooter", footerFunc))
            }, React.createElement("div", {
                  className: "win__sidebar"
                }, Curry._1(sidebarFunc, windowDispatch)), React.createElement("div", {
                  className: "win__content"
                }, children), footerFunc !== undefined ? React.createElement("footer", {
                    className: "win__footer"
                  }, Curry._1(footerFunc, undefined)) : null);
}

var Body = {
  make: Window$Body
};

var make = $$Window;

export {
  Body ,
  make ,
}
/* react Not a pure module */
